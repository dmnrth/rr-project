---
title: "05 Summary Report"
date: 2024-06-03
date-format: short
title-block-banner: true
execute:
  echo: false
theme: flatly
format:
  html:
    toc: true
    toc-depth: 2
---
---

```{r}
#| echo: false
#| output: false

packages <- c("xts", "DT", 'tidyverse', 'patchwork', "moments")

for (package in packages) {
  if (!require(package, character.only = TRUE)) {
    install.packages(package)
    library(package, character.only = TRUE)
  }
}
```

# Aim of the study

We based our research on the article **Applying Hybrid ARIMA-SGARCH in Algorithmic Investment Strategies on S&P500 Index** by Nguyen Vo and Robert Slepaczuk.

Our study aims to evaluate and compare the effectiveness of the ARIMA model and its hybrid combinations with GARCH family models (specifically SGARCH and EGARCH) in forecasting the log returns of the S&P500 index. The research utilizes daily data from Yahoo Finance, spanning from January 1, 2000, to December 31, 2019. Through a rolling window approach, the study investigates whether these hybrid models can better capture the time-series characteristics and offer superior predictive power compared to the standalone ARIMA model. The models are assessed based on their forecasting accuracy (using metrics such as MAE, MAPE, RMSE) and performance (including annualized return, annualized standard deviation, maximum drawdown, information ratio, and adjusted information ratio). The findings indicate that the hybrid models significantly outperform the ARIMA model and the Buy&Hold strategy over the long term, with results remaining robust across different window sizes, distribution types, and GARCH model variations.

# Framework of our research

Our research was divided into five parts, each documented in a separate notebook. In the first notebook, we focused on downloading S&P 500 data. The second notebook was dedicated to estimating ARIMA models. In the third notebook, we conducted sensitivity analysis. The fourth notebook is focused on calculating equity line and performance metrics for base case and performing sensitivity analysis. Finally, in the fifth notebook, we provided a comprehensive summary of our findings and compared our results with those presented in the source article that served as the basis for our research.

# Data Collection for S&P 500 Index

We collected historical data for the S&P 500 index from Yahoo Finance to ensure a reliable basis for our hybrid ARIMA-GARCH model analysis. The data spans from January 1, 2000, to December 31, 2019. Using the quantmod package in R, we downloaded the adjusted closing prices. From these, we calculated both logarithmic returns and simple returns to prepare the dataset for model fitting and forecasting.

```{r}
sp500_prices <- readRDS("input/sp500_prices.rds")
sp500_simple_returns <- readRDS("input/sp500_simple_returns.rds")
sp500_log_returns <- readRDS("input/sp500_log_returns.rds")
```

# Statistics

## Our results

```{r}
price_stats = tibble(SP500_prices_adj = as.numeric(sp500_prices)) %>% 
  summarise(Min = min(SP500_prices_adj),
            Quartile_1st = quantile(SP500_prices_adj,0.25),
            Median = median(SP500_prices_adj),
            Mean = mean(SP500_prices_adj),
            Quartile_3rd = quantile(SP500_prices_adj,0.75),
            Max = max(SP500_prices_adj),
            Skew = skewness(SP500_prices_adj),
            Kurtosis = kurtosis(SP500_prices_adj) - 3,
            Standard_error = sd(SP500_prices_adj)/sqrt(length(SP500_prices_adj)),
            Standard_deviation = sd(SP500_prices_adj)
            )

ret_stats = tibble(SP500_Log_Returns = as.numeric(sp500_log_returns)) %>% 
  na.omit() %>% 
  summarise(Min = min(SP500_Log_Returns),
            Quartile_1st = quantile(SP500_Log_Returns,0.25),
            Median = median(SP500_Log_Returns),
            Mean = mean(SP500_Log_Returns),
            Quartile_3rd = quantile(SP500_Log_Returns,0.75),
            Max = max(SP500_Log_Returns),
            Skew = skewness(SP500_Log_Returns),
            Kurtosis = kurtosis(SP500_Log_Returns) - 3,
            Standard_error = sd(SP500_Log_Returns)/sqrt(length(SP500_Log_Returns)),
            Standard_deviation = sd(SP500_Log_Returns)
            )

tibble(statistic = colnames(ret_stats), SP500_prices_adj = round(as.numeric(price_stats),4), SP500_Log_Returns = round(as.numeric(ret_stats),4)) %>% 
  datatable() %>% 
  formatRound(columns = c('SP500_prices_adj','SP500_Log_Returns'), digits = 4)
```

## Results from the article

```{r}
csv_file_path <- "input/Descriptive_statics_source_article.csv"

data <- read.csv(file=csv_file_path, sep= ";")

datatable(data)
```

### Conclusion

The tables presented in the images show descriptive statistics of the S&P 500 adjusted prices and log returns. The first table is produced by our group, and the second table is sourced from an article that we based our research on.

Upon comparison, it is clear that there are no differences in the reported statistics between the two tables. Both sets of statistics are identical, which indicates that our results align perfectly with those from the article.

The consistency between the results from our analysis and those from the article demonstrates that our analysis is accurate and reliable. This alignment confirms the robustness of our methods and calculations in deriving the descriptive statistics for the S&P 500 adjusted prices and log returns.

# Model estimation

Below are listed functions we have defined for our research purposes.

**fit_best_arima**- This function finds and fits the best ARIMA model. It searches through different combinations of p and q orders up to 5. The function returns the best ARIMA model based on the Akaike Information Criterion (AIC) .

**arima_rolling_forecast -** This function performs a rolling forecast using the best ARIMA model. It fits the best ARIMA model to each rolling window of data, and forecasts the next value. It can optionally log the process and show a progress bar.

**fit_best_arima_garch -** This function finds and fits the best ARIMA-GARCH model. It searches through different combinations of p and q orders for the ARIMA model and uses a specified GARCH model (g_model) and distribution. The function returns the best ARIMA-GARCH model based on the Akaike Information Criterion (AIC).

**arima_garch_rolling_forecast -** This function performs a rolling forecast using the best ARIMA-GARCH model. It fits the best ARIMA-GARCH model to each rolling window of data, and forecasts the next value. It can optionally log the process and show a progress bar. The function handles errors by attempting to refit the model with scaled data.

# Results comparison and final conclusions

## Performance statistics

### Base case

```{r}
csv_file_path <- "output/backtesting_output/performance_metrics/pm_case_1.csv"

data <- read.csv(file=csv_file_path, sep= ",",colClasses=c("NULL",NA,NA,NA,NA,NA,NA,NA,NA,NA,NA),)

datatable(data)
```
Obtained performance statistics of ARIMA(p,1,q) & ARIMA(p,1,q)-SGARCH(1,1).

![Original performance statistics of ARIMA(p,1,q) & ARIMA(p,1,q)-SGARCH(1,1) from Vo, N., & Ślepaczuk, R. (2022)](report_files/case1t.png)

```{r}
csv_file_path <- "output/backtesting_output/performance_metrics/pm_case_2.csv"

data <- read.csv(file=csv_file_path, sep= ",",colClasses=c("NULL",NA,NA,NA,NA,NA,NA,NA,NA,NA,NA))

datatable(data)
```
Obtained performance statistics of ARIMA(p,1,q) & ARIMA(p,1,q)-EGARCH(1,1).

![Original performance statistics of ARIMA(p,1,q) & ARIMA(p,1,q)-EGARCH(1,1) from Vo, N., & Ślepaczuk, R. (2022)](report_files/case2t.png)

```{r}
csv_file_path <- "output/backtesting_output/performance_metrics/pm_case_3.csv"

data <- read.csv(file=csv_file_path, sep= ",",colClasses=c("NULL",NA,NA,NA,NA,NA,NA,NA,NA,NA),)

datatable(data)
```
Obtained performance statistics of ARIMA(p,1,q)-SGARCH(1,1) with different window sizes.

![Original performance statistics of ARIMA(p,1,q)-SGARCH(1,1) with different window sizes from Vo, N., & Ślepaczuk, R. (2022)](report_files/case3t.png)

```{r}
csv_file_path <- "output/backtesting_output/performance_metrics/pm_case_4.csv"

data <- read.csv(file=csv_file_path, sep= ",",colClasses=c("NULL",NA,NA,NA,NA,NA,NA,NA,NA,NA),)

datatable(data)
```
Obtained performance statistics of all hybrid models with different distributions.

![Original performance statistics of all hybrid models with different distributions from Vo, N., & Ślepaczuk, R. (2022)](report_files/case4t.png)

## Equity lines

### Base case

```{r Case_1, fig.cap="Obtained equity curves of ARIMA(p,1,q) & ARIMA(p,1,q)-SGARCH(1,1).", fig.width=12, fig.height=5, results='hide'}
library(ggplot2) 

df_case_strat_case_1 <- read.csv('./output/backtesting_output/equity_lines/case_1.csv')
df_case_strat_case_1 <- data.frame(df_case_strat_case_1)

plot_case_1 <- ggplot() +
  geom_line(data = df_case_strat_case_1, aes(x = as.Date(X), y = buy_n_hold, color = "S&P 500")) +
  geom_line(data = df_case_strat_case_1, aes(x = as.Date(X), y = arima_base_case, color = "ARIMA 1000")) +
  geom_line(data = df_case_strat_case_1, aes(x = as.Date(X), y = arima.garch_base_case, color = "SGARCH.GED 1000")) +
  
  scale_color_manual(values = c("S&P 500" = "darkorange", "ARIMA 1000" = "darkblue", "SGARCH.GED 1000" = "darkgreen"),
                     name = 'Strategy') +
  
  theme(
    legend.position = c(.02, .98),
    legend.justification = c("left", "top"),
    legend.box.just = "left",
    legend.margin = margin(1, 1, 1, 1),
    legend.background = element_blank(),
    legend.box.background = element_rect(colour = "black"),
    legend.title = element_blank(), 
    legend.spacing.y = unit(0, "mm")
  ) +
  ylab('Equity')

plot_case_1

```

![Original equity curves of ARIMA(p,1,q) & ARIMA(p,1,q)-SGARCH(1,1) from Vo, N., & Ślepaczuk, R. (2022)](report_files/case1.png)

### EGARCH vs SGARCH

```{r Case_2, fig.cap="Obtained equity curves of ARIMA(p,1,q) & ARIMA(p,1,q)-EGARCH(1,1).", fig.width=12, fig.height=5, results='hide'}
library(ggplot2) 

df_case_strat_case_2 <- read.csv('./output/backtesting_output/equity_lines/case_2.csv')
df_case_strat_case_2 <- data.frame(df_case_strat_case_2)

plot_case_2 <- ggplot() +
  geom_line(data = df_case_strat_case_2, aes(x = as.Date(X), y = buy_n_hold, color = "S&P 500")) +
  geom_line(data = df_case_strat_case_2, aes(x = as.Date(X), y = arima_base_case, color = "ARIMA 1000")) +
  geom_line(data = df_case_strat_case_2, aes(x = as.Date(X), y = arima.garch_base_case, color = "SGARCH.GED 1000")) +
  geom_line(data = df_case_strat_case_2, aes(x = as.Date(X), y = arima.egarch_ged_1000, color = "EGARCH.GED 1000")) +
  
  scale_color_manual(values = c("S&P 500" = "darkorange", "ARIMA 1000" = "darkblue", "SGARCH.GED 1000" = "darkgreen", "EGARCH.GED 1000" = "darkred"),
                     name = 'Strategy') +
  
  theme(
    legend.position = c(.02, .98),
    legend.justification = c("left", "top"),
    legend.box.just = "left",
    legend.margin = margin(1, 1, 1, 1),
    legend.background = element_blank(),
    legend.box.background = element_rect(colour = "black"),
    legend.title = element_blank(), 
    legend.spacing.y = unit(0, "mm")
  ) +
  ylab('Equity')

plot_case_2

```

![Original equity curves of ARIMA(p,1,q) & ARIMA(p,1,q)-EGARCH(1,1) from Vo, N., & Ślepaczuk, R. (2022)](report_files/case2.png)

### Different window sizes

```{r Case_3, fig.cap="Obtained equity curves of ARIMA(p,1,q)-SGARCH(1,1) with different window sizes.", fig.width=12, fig.height=5, results='hide'}
library(ggplot2) 

df_case_strat_case_3 <- read.csv('./output/backtesting_output/equity_lines/case_3.csv')
df_case_strat_case_3 <- data.frame(df_case_strat_case_3)

plot_case_2 <- ggplot() +
  geom_line(data = df_case_strat_case_3, aes(x = as.Date(X), y = buy_n_hold, color = "S&P 500")) +
  geom_line(data = df_case_strat_case_3, aes(x = as.Date(X), y = arima_base_case, color = "ARIMA 1000")) +
  geom_line(data = df_case_strat_case_3, aes(x = as.Date(X), y = arima.sgarch_ged_500, color = "SGARCH.GED 500")) +
  geom_line(data = df_case_strat_case_3, aes(x = as.Date(X), y = arima.garch_base_case, color = "SGARCH.GED 1000")) +
  geom_line(data = df_case_strat_case_3, aes(x = as.Date(X), y = arima.sgarch_ged_1500, color = "SGARCH.GED 1500")) +
  
  scale_color_manual(values = c("S&P 500" = "darkorange", "ARIMA 1000" = "darkblue", "SGARCH.GED 500" = "darkgreen", "SGARCH.GED 1000" = "darkred", "SGARCH.GED 1500" = "pink"),
                     name = 'Strategy') +
  
  theme(
    legend.position = c(.02, .98),
    legend.justification = c("left", "top"),
    legend.box.just = "left",
    legend.margin = margin(1, 1, 1, 1),
    legend.background = element_blank(),
    legend.box.background = element_rect(colour = "black"),
    legend.title = element_blank(), 
    legend.spacing.y = unit(0, "mm")
  ) +
  ylab('Equity')

plot_case_2

```

![Original equity curves of ARIMA(p,1,q)-SGARCH(1,1) with different window sizes from Vo, N., & Ślepaczuk, R. (2022)](report_files/case3.png)

### Different distributions

```{r Case_4, fig.cap="Obtained equity curves of all hybrid models with different distributions.", fig.width=12, fig.height=5, results='hide'}
library(ggplot2) 

df_case_strat_case_4 <- read.csv('./output/backtesting_output/equity_lines/case_4.csv')
df_case_strat_case_4 <- data.frame(df_case_strat_case_4)

plot_case_4 <- ggplot() +
  geom_line(data = df_case_strat_case_4, aes(x = as.Date(X), y = buy_n_hold, color = "S&P 500")) +
  geom_line(data = df_case_strat_case_4, aes(x = as.Date(X), y = arima_base_case, color = "ARIMA 1000")) +
  geom_line(data = df_case_strat_case_4, aes(x = as.Date(X), y = arima.garch_base_case, color = "SGARCH.GED 1000")) +
  geom_line(data = df_case_strat_case_4, aes(x = as.Date(X), y = arima.sgarch_snorm_1000, color = "SGARCH.SNORM 1000")) +
  geom_line(data = df_case_strat_case_4, aes(x = as.Date(X), y = arima.sgarch_sstd_1000, color = "SGARCH.SSTD 1000")) +
  geom_line(data = df_case_strat_case_4, aes(x = as.Date(X), y = arima.sgarch_sged_1000, color = "SGARCH.SGED 1000")) +
  
  scale_color_manual(values = c("S&P 500" = "darkorange", "ARIMA 1000" = "darkblue", "SGARCH.GED 1000" = "darkgreen", "SGARCH.SNORM 1000" = "darkred", "SGARCH.SSTD 1000" = "pink", "SGARCH.SGED 1000" = "black"),
                     name = 'Strategy') +
  
  theme(
    legend.position = c(.02, .98),
    legend.justification = c("left", "top"),
    legend.box.just = "left",
    legend.margin = margin(1, 1, 1, 1),
    legend.background = element_blank(),
    legend.box.background = element_rect(colour = "black"),
    legend.title = element_blank(), 
    legend.spacing.y = unit(0, "mm")
  ) +
  ylab('Equity')

plot_case_4

```

![Original equity curves of all hybrid models with different distributions from Vo, N., & Ślepaczuk, R. (2022)](report_files/case4.png)

# Problems encountered

## Time series order

in article it was specified that log returns of S&P500 are forecasted. In further parts author mentions using model ARIMA(p,1,q) suggesting that original time series was integrated of order 1 - meaning that they were differenced once. Additionally there were parts where model ARMA was mentioned - with no integration.

### Our solution

From our point of view there is no reason to difference time series that were converted to log returns - plots of log returns suggest stationary time series, no tests were provided for stationarity of time series in the article. For our models we used log returns of S&P500

## Computational efficiency

In the artcle the best model was chosen based on AIC. In order to choose best p and q orders - 35 models were fitted. One step ahead forecasts were calculated for period between 20 December 2005 and 30 December 2019 - 3530 forecast vectors. In total foracasting using one models means checking 35\*3530 = 123.550 models. Additionally, eight different forecasts were made using various models.

### Our solution

In our notebooks we implemented parallel computing to be able to use multiple cores at which significantly speed up our calculations.

## Convergence problem

While running multiple models, we encountered an issue with the rugarch package. During the fitting and forecasting loops, the process was interrupted due to convergence problems. This issue caused our joobs to break.

### Our solution

To deal with this issue we used many tryCatch expressions, Having encountered predefined errors tryCatch would either skip the loop iteration or return NA, preventing the job from breaking completely. Additionally, we generated log files to track the errors.

# References

Vo, N., & Ślepaczuk, R. (2022). Applying hybrid ARIMA-SGARCH in algorithmic investment strategies on S&P500 index. Entropy, 24(2), 158.

# Appendix

![Behing the scenes of the model caluclation](report_files/calculations.png)
